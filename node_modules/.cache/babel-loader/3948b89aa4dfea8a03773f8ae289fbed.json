{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/GitHub/React 2/job-application-ats/src/Components/RoleSelect.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport DashTable from './DashTable';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RoleSelect = props => {\n  _s();\n\n  const [candidateData, setCandidateData] = useState([]);\n\n  const handleReject = id => {\n    const result = {\n      status: \"rejected\"\n    };\n    axios.put(`https://dct-application-form.herokuapp.com/users/application-form/update/${id}`, result).then(response => {\n      const data = response.data;\n      console.log(data); // const result = candidateData.find((ele)=>{\n      // if(ele._id === id) {\n      //     return {...ele, status:data.status}\n      // }})\n\n      const result = candidateData.find(ele => {\n        return ele.id == data.id;\n      });\n      console.log(result);\n      const [...candidateData] = resul;\n    }).catch(err => {\n      console.log(err.message);\n    });\n  }; // const editItem = (data) => {\n  //     const result = candidateData.find(ele=>{\n  //         return ele.id===data.id})\n  //     }\n  //     const result = data.map(t=>{\n  //         if (t.id === task.id) {\n  //             return {...t, ...task}\n  //         } else {\n  //             return {...t}\n  //         }\n  //     })\n  //     setTasks(result)\n  // }\n\n\n  useEffect(() => {\n    axios.get('https://dct-application-form.herokuapp.com/users/application-forms').then(response => {\n      const result = response.data;\n      setCandidateData(result);\n      console.log(result);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  }, []);\n\n  const handleAll = () => {\n    axios.get('https://dct-application-form.herokuapp.com/users/application-forms').then(response => {\n      const result = response.data;\n      setCandidateData(result);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  };\n\n  const handleFront = () => {\n    axios.get('https://dct-application-form.herokuapp.com/users/application-forms').then(response => {\n      const data = response.data;\n      const result = data.filter(ele => ele.jobTitle === \"Front-End Developer\");\n      setCandidateData(result);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  };\n\n  const handleNode = () => {\n    axios.get('https://dct-application-form.herokuapp.com/users/application-forms').then(response => {\n      const data = response.data;\n      const result = data.filter(ele => ele.jobTitle === \"Node.js Developer\");\n      setCandidateData(result);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  };\n\n  const handleMean = () => {\n    axios.get('https://dct-application-form.herokuapp.com/users/application-forms').then(response => {\n      const data = response.data;\n      const result = data.filter(ele => ele.jobTitle === \"MEAN Stack Developer\");\n      setCandidateData(result);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  };\n\n  const handleFull = () => {\n    axios.get('https://dct-application-form.herokuapp.com/users/application-forms').then(response => {\n      const data = response.data;\n      const result = data.filter(ele => ele.jobTitle === \"FULL Stack Developer\");\n      setCandidateData(result);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAll,\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFront,\n      children: \"Front-End Developer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNode,\n      children: \"Node.js Developer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMean,\n      children: \"MEAN Stack Developer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFull,\n      children: \"FULL Stack Developer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DashTable, {\n      candidateData: candidateData,\n      handleReject: handleReject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RoleSelect, \"BD8Nr0AFEs7vN67ALCp3WQENgOo=\");\n\n_c = RoleSelect;\nexport default RoleSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoleSelect\");","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/React 2/job-application-ats/src/Components/RoleSelect.js"],"names":["React","useState","useEffect","DashTable","axios","RoleSelect","props","candidateData","setCandidateData","handleReject","id","result","status","put","then","response","data","console","log","find","ele","resul","catch","err","message","get","handleAll","handleFront","filter","jobTitle","handleNode","handleMean","handleFull"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAE1B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMQ,YAAY,GAAIC,EAAD,IAAQ;AAEzB,UAAMC,MAAM,GAAG;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAf;AAEAR,IAAAA,KAAK,CAACS,GAAN,CAAW,4EAA2EH,EAAG,EAAzF,EAA4FC,MAA5F,EACCG,IADD,CACMC,QAAQ,IAAE;AAEZ,YAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAHY,CAIZ;AACA;AACA;AACA;;AACA,YAAML,MAAM,GAAGJ,aAAa,CAACY,IAAd,CAAmBC,GAAG,IAAE;AACnC,eAAOA,GAAG,CAACV,EAAJ,IAAQM,IAAI,CAACN,EAApB;AAAuB,OADZ,CAAf;AAEIO,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACA,YAAM,CAAC,GAAGJ,aAAJ,IAAqBc,KAA3B;AACP,KAbD,EAcCC,KAdD,CAcQC,GAAD,IAAO;AACVN,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACC,OAAhB;AACH,KAhBD;AAiBH,GArBD,CAJ0B,CA2B1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAtB,EAAAA,SAAS,CAAC,MAAI;AACVE,IAAAA,KAAK,CAACqB,GAAN,CAAU,oEAAV,EACCX,IADD,CACOC,QAAD,IAAY;AACd,YAAMJ,MAAM,GAAGI,QAAQ,CAACC,IAAxB;AACAR,MAAAA,gBAAgB,CAACG,MAAD,CAAhB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACH,KALD,EAMCW,KAND,CAMQC,GAAD,IAAO;AACVN,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACC,OAAhB;AACH,KARD;AASH,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAME,SAAS,GAAG,MAAM;AACpBtB,IAAAA,KAAK,CAACqB,GAAN,CAAU,oEAAV,EACCX,IADD,CACOC,QAAD,IAAY;AACd,YAAMJ,MAAM,GAAGI,QAAQ,CAACC,IAAxB;AACAR,MAAAA,gBAAgB,CAACG,MAAD,CAAhB;AACH,KAJD,EAKCW,KALD,CAKQC,GAAD,IAAO;AACVN,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACC,OAAhB;AACH,KAPD;AAQH,GATD;;AAWA,QAAMG,WAAW,GAAG,MAAM;AACtBvB,IAAAA,KAAK,CAACqB,GAAN,CAAU,oEAAV,EACCX,IADD,CACOC,QAAD,IAAY;AACd,YAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACA,YAAML,MAAM,GAAGK,IAAI,CAACY,MAAL,CAAYR,GAAG,IAAEA,GAAG,CAACS,QAAJ,KAAe,qBAAhC,CAAf;AACArB,MAAAA,gBAAgB,CAACG,MAAD,CAAhB;AACH,KALD,EAMCW,KAND,CAMQC,GAAD,IAAO;AACVN,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACC,OAAhB;AACH,KARD;AASH,GAVD;;AAWA,QAAMM,UAAU,GAAG,MAAM;AACrB1B,IAAAA,KAAK,CAACqB,GAAN,CAAU,oEAAV,EACCX,IADD,CACOC,QAAD,IAAY;AACd,YAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACA,YAAML,MAAM,GAAGK,IAAI,CAACY,MAAL,CAAYR,GAAG,IAAEA,GAAG,CAACS,QAAJ,KAAe,mBAAhC,CAAf;AACArB,MAAAA,gBAAgB,CAACG,MAAD,CAAhB;AACH,KALD,EAMCW,KAND,CAMQC,GAAD,IAAO;AACVN,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACC,OAAhB;AACH,KARD;AASH,GAVD;;AAYA,QAAMO,UAAU,GAAG,MAAM;AACrB3B,IAAAA,KAAK,CAACqB,GAAN,CAAU,oEAAV,EACCX,IADD,CACOC,QAAD,IAAY;AACd,YAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACA,YAAML,MAAM,GAAGK,IAAI,CAACY,MAAL,CAAYR,GAAG,IAAEA,GAAG,CAACS,QAAJ,KAAe,sBAAhC,CAAf;AACArB,MAAAA,gBAAgB,CAACG,MAAD,CAAhB;AACH,KALD,EAMCW,KAND,CAMQC,GAAD,IAAO;AACVN,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACC,OAAhB;AACH,KARD;AASH,GAVD;;AAYA,QAAMQ,UAAU,GAAG,MAAM;AACrB5B,IAAAA,KAAK,CAACqB,GAAN,CAAU,oEAAV,EACCX,IADD,CACOC,QAAD,IAAY;AACd,YAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACA,YAAML,MAAM,GAAGK,IAAI,CAACY,MAAL,CAAYR,GAAG,IAAEA,GAAG,CAACS,QAAJ,KAAe,sBAAhC,CAAf;AACArB,MAAAA,gBAAgB,CAACG,MAAD,CAAhB;AACH,KALD,EAMCW,KAND,CAMQC,GAAD,IAAO;AACVN,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACC,OAAhB;AACH,KARD;AASH,GAVD;;AAYA,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAEE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAEG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,OAAO,EAAEC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,MAAA,OAAO,EAAEC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,SAAD;AAAW,MAAA,aAAa,EAAEzB,aAA1B;AAAyC,MAAA,YAAY,EAAEE;AAAvD;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA1HD;;GAAMJ,U;;KAAAA,U;AA4HN,eAAeA,UAAf","sourcesContent":["import {React, useState, useEffect} from 'react'\nimport DashTable from './DashTable'\nimport axios from 'axios'\n\nconst RoleSelect = (props) => {\n\n    const [candidateData, setCandidateData] = useState([])\n\n    const handleReject = (id) => {\n\n        const result = {status: \"rejected\"}\n\n        axios.put(`https://dct-application-form.herokuapp.com/users/application-form/update/${id}`, result)\n        .then(response=>{\n            \n            const data = response.data\n            console.log(data)\n            // const result = candidateData.find((ele)=>{\n            // if(ele._id === id) {\n            //     return {...ele, status:data.status}\n            // }})\n            const result = candidateData.find(ele=>{\n                return ele.id==data.id})\n                console.log(result)\n                const [...candidateData] = resul\n        })\n        .catch((err)=>{\n            console.log(err.message)\n        })\n    }\n\n    // const editItem = (data) => {\n    //     const result = candidateData.find(ele=>{\n    //         return ele.id===data.id})\n    //     }\n    //     const result = data.map(t=>{\n    //         if (t.id === task.id) {\n    //             return {...t, ...task}\n    //         } else {\n    //             return {...t}\n    //         }\n    //     })\n    //     setTasks(result)\n    // }\n\n\n    useEffect(()=>{\n        axios.get('https://dct-application-form.herokuapp.com/users/application-forms')\n        .then((response)=>{\n            const result = response.data\n            setCandidateData(result)\n            console.log(result)\n        })\n        .catch((err)=>{\n            console.log(err.message)\n        })\n    }, [])\n\n    const handleAll = () => {\n        axios.get('https://dct-application-form.herokuapp.com/users/application-forms')\n        .then((response)=>{\n            const result = response.data\n            setCandidateData(result)\n        })\n        .catch((err)=>{\n            console.log(err.message)\n        })\n    }\n\n    const handleFront = () => {\n        axios.get('https://dct-application-form.herokuapp.com/users/application-forms')\n        .then((response)=>{\n            const data = response.data\n            const result = data.filter(ele=>ele.jobTitle===\"Front-End Developer\")\n            setCandidateData(result)\n        })\n        .catch((err)=>{\n            console.log(err.message)\n        })\n    }\n    const handleNode = () => {\n        axios.get('https://dct-application-form.herokuapp.com/users/application-forms')\n        .then((response)=>{\n            const data = response.data\n            const result = data.filter(ele=>ele.jobTitle===\"Node.js Developer\")\n            setCandidateData(result)\n        })\n        .catch((err)=>{\n            console.log(err.message)\n        })\n    }\n\n    const handleMean = () => {\n        axios.get('https://dct-application-form.herokuapp.com/users/application-forms')\n        .then((response)=>{\n            const data = response.data\n            const result = data.filter(ele=>ele.jobTitle===\"MEAN Stack Developer\")\n            setCandidateData(result)\n        })\n        .catch((err)=>{\n            console.log(err.message)\n        })\n    }\n\n    const handleFull = () => {\n        axios.get('https://dct-application-form.herokuapp.com/users/application-forms')\n        .then((response)=>{\n            const data = response.data\n            const result = data.filter(ele=>ele.jobTitle===\"FULL Stack Developer\")\n            setCandidateData(result)\n        })\n        .catch((err)=>{\n            console.log(err.message)\n        })\n    }\n\n    return (\n        <div>\n            <button onClick={handleAll}>All</button>\n            <button onClick={handleFront}>Front-End Developer</button>\n            <button onClick={handleNode}>Node.js Developer</button>\n            <button onClick={handleMean}>MEAN Stack Developer</button>\n            <button onClick={handleFull}>FULL Stack Developer</button>\n            <DashTable candidateData={candidateData} handleReject={handleReject}/>\n        </div>\n    )\n}\n\nexport default RoleSelect"]},"metadata":{},"sourceType":"module"}