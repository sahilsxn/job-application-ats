{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/GitHub/React 2/job-application-ats/src/Components/RoleSelect.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport DashTable from './DashTable';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RoleSelect = props => {\n  _s();\n\n  const [candidateData, setCandidateData] = useState([]);\n  const [toggle, setToggle] = useState(false);\n\n  const handleToggle = () => {\n    setToggle(!toggle);\n  };\n\n  useEffect(() => {\n    axios.get('https://dct-application-form.herokuapp.com/users/application-forms').then(response => {\n      const result = response.data;\n      setCandidateData(result);\n      console.log(result);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  }, [toggle]);\n\n  const updateApplication = user => {\n    const result = candidateData.map(candidate => {\n      if (candidate._id === user._id) {\n        return { ...candidate,\n          ...user\n        };\n      } else {\n        return { ...candidate\n        };\n      }\n    });\n    setCandidateData(result);\n  };\n\n  const handleAll = () => {\n    axios.get('https://dct-application-form.herokuapp.com/users/application-forms').then(response => {\n      const result = response.data;\n      setCandidateData(result);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  };\n\n  const handleFront = () => {\n    axios.get('https://dct-application-form.herokuapp.com/users/application-forms').then(response => {\n      const data = response.data;\n      const result = data.filter(ele => ele.jobTitle === \"Front-End Developer\");\n      setCandidateData(result);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  };\n\n  const handleNode = () => {\n    axios.get('https://dct-application-form.herokuapp.com/users/application-forms').then(response => {\n      const data = response.data;\n      const result = data.filter(ele => ele.jobTitle === \"Node.js Developer\");\n      setCandidateData(result);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  };\n\n  const handleMean = () => {\n    axios.get('https://dct-application-form.herokuapp.com/users/application-forms').then(response => {\n      const data = response.data;\n      const result = data.filter(ele => ele.jobTitle === \"MEAN Stack Developer\");\n      setCandidateData(result);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  };\n\n  const handleFull = () => {\n    axios.get('https://dct-application-form.herokuapp.com/users/application-forms').then(response => {\n      const data = response.data;\n      const result = data.filter(ele => ele.jobTitle === \"FULL Stack Developer\");\n      setCandidateData(result);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAll,\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFront,\n      children: \"Front-End Developer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNode,\n      children: \"Node.js Developer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMean,\n      children: \"MEAN Stack Developer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFull,\n      children: \"FULL Stack Developer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DashTable, {\n      candidateData: candidateData,\n      handleToggle: handleToggle,\n      updateApplication: updateApplication\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RoleSelect, \"O/+j0oWd75ZNGOnlAZaXPaYsAFo=\");\n\n_c = RoleSelect;\nexport default RoleSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoleSelect\");","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/React 2/job-application-ats/src/Components/RoleSelect.js"],"names":["React","useState","useEffect","DashTable","axios","RoleSelect","props","candidateData","setCandidateData","toggle","setToggle","handleToggle","get","then","response","result","data","console","log","catch","err","message","updateApplication","user","map","candidate","_id","handleAll","handleFront","filter","ele","jobTitle","handleNode","handleMean","handleFull"],"mappings":"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","sourcesContent":["import {React, useState, useEffect} from 'react'\nimport DashTable from './DashTable'\nimport axios from 'axios'\n\nconst RoleSelect = (props) => {\n\n    const [candidateData, setCandidateData] = useState([])\n    const [toggle, setToggle] = useState(false)\n\n    const handleToggle = () => {\n        setToggle(!toggle)\n    }\n\n    useEffect(()=>{\n        axios.get('https://dct-application-form.herokuapp.com/users/application-forms')\n        .then((response)=>{\n            const result = response.data\n            setCandidateData(result)\n            console.log(result)\n        })\n        .catch((err)=>{\n            console.log(err.message)\n        })\n    }, [toggle])\n\n    const updateApplication = (user) => {\n        const result = candidateData.map((candidate) => {\n          if (candidate._id === user._id) {\n            return { ...candidate, ...user };\n          } else {\n            return { ...candidate };\n          }\n        });\n        setCandidateData(result);\n      };\n\n    const handleAll = () => {\n        axios.get('https://dct-application-form.herokuapp.com/users/application-forms')\n        .then((response)=>{\n            const result = response.data\n            setCandidateData(result)\n        })\n        .catch((err)=>{\n            console.log(err.message)\n        })\n    }\n\n    const handleFront = () => {\n        axios.get('https://dct-application-form.herokuapp.com/users/application-forms')\n        .then((response)=>{\n            const data = response.data\n            const result = data.filter(ele=>ele.jobTitle===\"Front-End Developer\")\n            setCandidateData(result)\n        })\n        .catch((err)=>{\n            console.log(err.message)\n        })\n    }\n    const handleNode = () => {\n        axios.get('https://dct-application-form.herokuapp.com/users/application-forms')\n        .then((response)=>{\n            const data = response.data\n            const result = data.filter(ele=>ele.jobTitle===\"Node.js Developer\")\n            setCandidateData(result)\n        })\n        .catch((err)=>{\n            console.log(err.message)\n        })\n    }\n\n    const handleMean = () => {\n        axios.get('https://dct-application-form.herokuapp.com/users/application-forms')\n        .then((response)=>{\n            const data = response.data\n            const result = data.filter(ele=>ele.jobTitle===\"MEAN Stack Developer\")\n            setCandidateData(result)\n        })\n        .catch((err)=>{\n            console.log(err.message)\n        })\n    }\n\n    const handleFull = () => {\n        axios.get('https://dct-application-form.herokuapp.com/users/application-forms')\n        .then((response)=>{\n            const data = response.data\n            const result = data.filter(ele=>ele.jobTitle===\"FULL Stack Developer\")\n            setCandidateData(result)\n        })\n        .catch((err)=>{\n            console.log(err.message)\n        })\n    }\n\n    return (\n        <div>\n            <button onClick={handleAll}>All</button>\n            <button onClick={handleFront}>Front-End Developer</button>\n            <button onClick={handleNode}>Node.js Developer</button>\n            <button onClick={handleMean}>MEAN Stack Developer</button>\n            <button onClick={handleFull}>FULL Stack Developer</button>\n            <DashTable candidateData={candidateData} handleToggle={handleToggle} updateApplication={updateApplication}/>\n        </div>\n    )\n}\n\nexport default RoleSelect"]},"metadata":{},"sourceType":"module"}