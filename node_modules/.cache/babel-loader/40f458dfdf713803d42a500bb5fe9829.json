{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/GitHub/React 2/job-application-ats/src/Components/ContactForm.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport validator from 'validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactForm = props => {\n  _s();\n\n  const [userName, setUserName] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [userNumber, setUserNumber] = useState('');\n  const [job, setJob] = useState('');\n  const [experience, setExperience] = useState('');\n  const [skills, setSkills] = useState('');\n  const [formErrors, setFormErrors] = useState({});\n  const errors = {};\n\n  const handleChange = e => {\n    if (e.target.name === \"userName\") {\n      setUserName(e.target.value);\n    } else if (e.target.name === \"userEmail\") {\n      setUserEmail(e.target.value);\n    } else if (e.target.name === \"userNumber\") {\n      setUserNumber(e.target.value);\n    } else if (e.target.name === \"job\") {\n      setJob(e.target.value);\n    } else if (e.target.name === \"experience\") {\n      setExperience(e.target.value);\n    } else if (e.target.name === \"skills\") {\n      setSkills(e.target.value);\n    }\n  };\n\n  const runValidations = () => {\n    if (userName.trim().length === 0) {\n      errors.userName = 'Name cannot be blank';\n    }\n\n    if (userEmail.trim().length === 0) {\n      errors.userEmail = 'Email cannot be blank';\n    } else if (!validator.isEmail(userEmail)) {\n      errors.userEmail = 'Invalid Email Format';\n    }\n\n    if (userNumber.trim().length === 0) {\n      errors.userNumber = 'Number cannot be blank';\n    }\n\n    if (userName.trim().length === 0) {\n      errors.userName = 'Name cannot be blank';\n    }\n\n    if (experience.trim().length === 0) {\n      errors.experience = 'Experience cannot be blank';\n    }\n\n    if (skills.trim().length === 0) {\n      errors.experience = 'E cannot be blank';\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    runValidations();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Full Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"userName\",\n        value: userName,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 90\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"userEmail\",\n        value: userEmail,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 92\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Contact Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"userNumber\",\n        value: userNumber,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 94\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Job Applying for\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"job\",\n        value: job,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Front-End Developer\",\n          children: \"Front-End Developer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Node.js Developer\",\n          children: \"Node.js Developer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"MEAN Stack Developer\",\n          children: \"MEAN Stack Developer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"FULL Stack Developer\",\n          children: \"FULL Stack Developer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Experience\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"experience\",\n        value: experience,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 94\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Technical Skills\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"skills\",\n        value: skills,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 87\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Send Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 60\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactForm, \"LidseMa3Dh0SUKjU+qR0GkX+boU=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/React 2/job-application-ats/src/Components/ContactForm.js"],"names":["React","useState","useEffect","validator","ContactForm","props","userName","setUserName","userEmail","setUserEmail","userNumber","setUserNumber","job","setJob","experience","setExperience","skills","setSkills","formErrors","setFormErrors","errors","handleChange","e","target","name","value","runValidations","trim","length","isEmail","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import {React, useState, useEffect} from 'react'\nimport validator from 'validator';\n\n\nconst ContactForm = (props) => {\n\n    const [userName, setUserName] = useState('')\n    const [userEmail, setUserEmail] = useState('')\n    const [userNumber, setUserNumber] = useState('')\n    const [job, setJob] = useState('')\n    const [experience, setExperience] = useState('')\n    const [skills, setSkills] = useState('')\n    const [formErrors, setFormErrors] = useState({})\n    const errors = {}\n\n    const handleChange = (e) => {\n        if(e.target.name === \"userName\"){\n            setUserName(e.target.value)\n        } else if(e.target.name === \"userEmail\"){\n            setUserEmail(e.target.value)\n        } else if(e.target.name === \"userNumber\"){\n            setUserNumber(e.target.value)\n        } else if(e.target.name === \"job\"){\n            setJob(e.target.value)\n        } else if(e.target.name === \"experience\"){\n            setExperience(e.target.value)\n        } else if(e.target.name === \"skills\"){\n            setSkills(e.target.value)\n        }\n    }\n\n    const runValidations = () => {\n        if(userName.trim().length === 0) {\n            errors.userName = 'Name cannot be blank'\n        }\n        if(userEmail.trim().length === 0) {\n            errors.userEmail = 'Email cannot be blank'\n        } else if (!validator.isEmail(userEmail)) {\n            errors.userEmail = 'Invalid Email Format'\n        }\n        if(userNumber.trim().length === 0) {\n            errors.userNumber = 'Number cannot be blank'\n        }\n        if(userName.trim().length === 0) {\n            errors.userName = 'Name cannot be blank'\n        }\n        if(experience.trim().length === 0) {\n            errors.experience = 'Experience cannot be blank'\n        }\n        if(skills.trim().length === 0) {\n            errors.experience = 'E cannot be blank'\n        }\n        \n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        runValidations()\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}> \n            <label>Full Name</label>\n            <input type=\"text\" name=\"userName\" value={userName} onChange={handleChange}/><br/>\n            <label>Email Address</label>\n            <input type=\"text\" name=\"userEmail\" value={userEmail} onChange={handleChange}/><br/>\n            <label>Contact Number</label>\n            <input type=\"text\" name=\"userNumber\" value={userNumber} onChange={handleChange}/><br/>\n            <label>Job Applying for</label>\n            <select name=\"job\" value={job} onChange={handleChange}>\n            <option value=\"\">Select</option>\n            <option value=\"Front-End Developer\">Front-End Developer</option>\n            <option value=\"Node.js Developer\">Node.js Developer</option>\n            <option value=\"MEAN Stack Developer\">MEAN Stack Developer</option>\n            <option value=\"FULL Stack Developer\">FULL Stack Developer</option>\n            </select> <br/>\n            <label>Experience</label>\n            <input type=\"text\" name=\"experience\" value={experience} onChange={handleChange}/><br/>\n            <label>Technical Skills</label>\n            <textarea name=\"skills\" value={skills} onChange={handleChange}></textarea><br/>\n            <input type=\"submit\" value=\"Send Application\"/><br/>\n            </form>\n\n\n\n\n        </div>\n    )\n}\n\nexport default ContactForm"]},"metadata":{},"sourceType":"module"}